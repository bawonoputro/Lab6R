% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/knapsack_dynamic.R
\name{knapsack_dynamic}
\alias{knapsack_dynamic}
\title{Dynamic Programming Knapsack}
\usage{
knapsack_dynamic(x, W)
}
\arguments{
\item{x}{A data frame with two columns:
- `v`: A numeric vector representing the values of the items.
- `w`: A numeric vector representing the weights of the items.
Both vectors must be positive, numeric, and finite.}

\item{W}{A single positive numeric value representing the knapsack's capacity.}
}
\value{
A list containing:
  - `value`: Maximum total value achievable.
  - `elements`: A vector of the selected items that give the maximum value.
}
\description{
Solves the Knapsack problem using dynamic programming. The function
calculates the maximum value that can be obtained by selecting a subset of items
such that their total weight does not exceed the given knapsack capacity.
}
\details{
This approach uses a **bottom-up** DP algorithm and iterates over the items and
capacities, building the solution table row by row. The function then uses **backtracking**
to recover the list of items selected to achieve the maximum value.
}
